---
export interface Props {
    title: string;
    iconPath: string;
    color: string; // e.g., "purple", "pink", "blue"
    items: string[];
}

const { title, iconPath, color, items } = Astro.props;

// Generate dynamic classes:
const bgClass = `bg-${color}-500/10`;
const textClass = `text-${color}-400`;
const borderClass = `border-${color}-500/20`;
const hoverClass = `hover:bg-${color}-500/20`;
---

<div class="bg-gray-800 rounded-xl p-8 border border-gray-700">
    <h2 class="text-2xl font-semibold text-white mb-6 flex items-center">
        <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6 mr-2 text-purple-400"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
        >
            <path d={iconPath}></path>
        </svg>
        {title}
    </h2>
    <div class="flex flex-wrap gap-3">
        {
            items.map((item) => (
                <span
                    class={`${bgClass} ${textClass} px-4 py-2 rounded-lg border ${borderClass} ${hoverClass} transition-colors`}
                >
                    {item}
                </span>
            ))
        }
    </div>
</div>
