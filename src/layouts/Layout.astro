---
import "../styles/tailwind.css";
import * as portfolioData from "../data/portfolio.json";
const {
  title = "Zander Lewis",
  description = portfolioData.bio,
  keywords = [...portfolioData.skills, ...portfolioData.programmingLanguages, ...portfolioData.learning].join(", ")
} = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="robots" content="index, follow" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={portfolioData.image} />
    <meta property="og:url" content={Astro.request.url} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={portfolioData.image} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link rel="canonical" href={Astro.request.url} />
  </head>
  <body>
    <div class="_bg"></div>
    <slot />
    <script>
      window.addEventListener("scroll", () => {
        const scrollY = window.scrollY;
        const bg = document.querySelector("._bg");
        if (bg) {
          // Update the background position using modulo arithmetic for an infinite effect:
          const offset = (scrollY * 0.05) % 200;
          (bg as HTMLElement).style.backgroundPosition = `0 ${offset}px`;
        }
      });
    </script>
  </body>
</html>

<style is:global>
  :root {
    --accent: 139, 92, 246;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }

  html {
    font-family: "Inter", system-ui, sans-serif;
    background: #111827;
    color-scheme: dark;
  }

  ::selection {
    background: rgba(139, 92, 246, 0.2);
  }

  ._bg {
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 100%;
    background-color: #0a0f1f;
    background-image: radial-gradient(
      circle,
      rgba(255, 255, 255, 0.1) 1px,
      transparent 1px
    );
    background-size: 20px 20px;
    background-repeat: repeat;
    will-change: background-position;
  }

  .glass {
    background: rgba(255, 255, 255, 0.05) !important;
    backdrop-filter: blur(20px) !important;
    -webkit-backdrop-filter: blur(20px) !important;
    border-radius: 12px !important;
    border: 1px solid rgba(255, 255, 255, 0.1) !important;
    background-clip: padding-box;
  }

  .glass-item {
    background: rgba(255, 255, 255, 0.03) !important;
    backdrop-filter: blur(15px) !important;
    -webkit-backdrop-filter: blur(15px) !important;
    border-radius: 8px !important;
    border: 1px solid rgba(255, 255, 255, 0.08) !important;
    background-clip: padding-box;
  }
</style>
